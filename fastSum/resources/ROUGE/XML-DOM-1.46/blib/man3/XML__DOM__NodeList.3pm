.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "XML::DOM::NodeList 3pm"
.TH XML::DOM::NodeList 3pm "2000-01-31" "perl v5.22.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
XML::DOM::NodeList \- A node list as used by XML::DOM
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The NodeList interface provides the abstraction of an ordered
collection of nodes, without defining or constraining how this
collection is implemented.
.PP
The items in the NodeList are accessible via an integral index,
starting from 0.
.PP
Although the \s-1DOM\s0 spec states that all NodeLists are \*(L"live\*(R" in that they
allways reflect changes to the \s-1DOM\s0 tree, the NodeList returned by
getElementsByTagName is not live in this implementation. See \s-1CAVEATS\s0
for details.
.SS "\s-1METHODS\s0"
.IX Subsection "METHODS"
.IP "item (index)" 4
.IX Item "item (index)"
Returns the indexth item in the collection. If index is
greater than or equal to the number of nodes in the list,
this returns undef.
.IP "getLength" 4
.IX Item "getLength"
The number of nodes in the list. The range of valid child
node indices is 0 to length\-1 inclusive.
.SS "Additional methods not in the \s-1DOM\s0 Spec"
.IX Subsection "Additional methods not in the DOM Spec"
.IP "dispose" 4
.IX Item "dispose"
Removes all circular references in this NodeList and its descendants so the 
objects can be claimed for garbage collection. The objects should not be used
afterwards.
