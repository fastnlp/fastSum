.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "XML::DOM::Notation 3pm"
.TH XML::DOM::Notation 3pm "2000-01-31" "perl v5.22.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
XML::DOM::Notation \- An XML NOTATION in XML::DOM
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
XML::DOM::Notation extends XML::DOM::Node.
.PP
This node represents a Notation, e.g.
.PP
.Vb 1
\& <!NOTATION gs SYSTEM "GhostScript">
\&
\& <!NOTATION name PUBLIC "pubId">
\&
\& <!NOTATION name PUBLIC "pubId" "sysId">
\&
\& <!NOTATION name SYSTEM "sysId">
.Ve
.SS "\s-1METHODS\s0"
.IX Subsection "METHODS"
.IP "getName and setName (name)" 4
.IX Item "getName and setName (name)"
Returns (or sets) the Notation name, which is the first token after the 
\&\s-1NOTATION\s0 keyword.
.IP "getSysId and setSysId (sysId)" 4
.IX Item "getSysId and setSysId (sysId)"
Returns (or sets) the system \s-1ID,\s0 which is the token after the optional
\&\s-1SYSTEM\s0 keyword.
.IP "getPubId and setPubId (pubId)" 4
.IX Item "getPubId and setPubId (pubId)"
Returns (or sets) the public \s-1ID,\s0 which is the token after the optional
\&\s-1PUBLIC\s0 keyword.
.IP "getBase" 4
.IX Item "getBase"
This is passed by XML::Parser in the Notation handler. 
I don't know what it is yet.
.IP "getNodeName" 4
.IX Item "getNodeName"
Returns the same as getName.
